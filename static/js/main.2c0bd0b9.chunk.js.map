{"version":3,"sources":["components/Sequence.js","components/Anim.js","components/GameObjects.js","components/Text.js","components/Timestamps.js","components/Trigger.js","components/Page.js","components/Format.js","containers/index.js","containers/Playground.js","App.js","serviceWorker.js","index.js"],"names":["Sequences","state","default","startFrame","endFrame","noOfLoops","movable","speed","_this2","this","react_default","a","createElement","props","mainData","map","p","key","Object","keys","k","i","kk","j","placeholder","value","name","onChange","e","t","JSON","parse","stringify","target","onClick","d","assign","length","onAddSeq","Component","Anim","id","animName","startX","startY","startIndex","endIndex","onTouch","onStart","secPerFrame","sequences","className","Sequence","push","join","split","v","console","log","onAddAnim","GameObjects","posX","posY","scaleX","scaleY","imageName","orderInLayer","inText","label","destroyOnCollision","draggable","anim","components_Anim","onAddGameObject","Text","text","onAddText","Timestamps","start","wordIdx","audio","end","starWord","onAddTimestamp","Trigger","stnzaId","textId","timestamp","sceneObjectId","animId","typeOfLinking","onAddTrigger","Page","pageNumber","script","audioName","isAnim","objectId","gameObjects","texts","audioFile","timestamps","triggers","pageId","components_Text","onUpdate","components_GameObjects","components_Timestamps","components_Trigger","setState","pa","onAddPage","Format","Array","isArray","components_Page","pages","dataChange","Playground","fontColor","textStartPositionX","textStartPositionY","textFontSize","storyImageFile","backgroundColor","arrowColor","fontFamily","language","object","newObject","_","clone","each","val","replacePropertyValue","_this3","components_Format","objectSpread","defineProperty","toConsumableArray","Download","App","containers","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2c0bd0b9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Sequences extends Component {\n  state = {\n    default: {\n      startFrame: \"\",\n      endFrame: \"\",\n      noOfLoops: \"\",\n      movable: {\n        speed: \"\"\n      }\n    }\n  };\n  render() {\n    return (\n      <div>\n        {this.props.mainData.map((p, key) => {\n          return (\n            <div key={key}>\n              <p>Sequence {key + 1}</p>\n              {Object.keys(p).map((k, i) => {\n                if (k === \"movable\") {\n                    return (\n                      <div key={i}>\n                        <p>{k}</p>\n                        {Object.keys(p[k]).map((kk, j) => {\n                          return (\n                            <div key={j}>\n                              <input\n                                placeholder={key}\n                                value={p[k][key]}\n                                name={p[k][key]}\n                                onChange={e => {\n                                  let t = JSON.parse(\n                                    JSON.stringify(this.props.mainData)\n                                  );\n                                  t[key][k][kk] = e.target.value;\n                                  this.props.onChange(t);\n                                }}\n                              />\n                            </div>\n                          );\n                        })}\n                      </div>\n                    );\n                  }  else {\n                  return (\n                    <div key={i}>\n                      <input\n                        placeholder={k}\n                        value={p[k]}\n                        name={p[k]}\n                        onChange={e => {\n                          let t = JSON.parse(\n                            JSON.stringify(this.props.mainData)\n                          );\n                          t[key][k] = e.target.value;\n                          this.props.onChange(t);\n                        }}\n                      />\n                    </div>\n                  );\n                }\n              })}\n            </div>\n          );\n        })}\n\n        <button\n          onClick={() => {\n            let d = Object.assign({}, this.state.default);\n            d[\"id\"] = this.props.mainData.length + 1;\n            this.props.onAddSeq(d);\n          }}\n        >\n          Add Sequence\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Sequences;\n","import React, { Component } from \"react\";\nimport Sequence from \"./Sequence\";\n\nclass Anim extends Component {\n  state = {\n    default: {\n      id: 0,\n      animName: \"A02\",\n      startX: 25,\n      startY: -65,\n      startIndex: 0,\n      endIndex: 5,\n      onTouch: true,\n      onStart: false,\n      secPerFrame: [0.2, 0.2, 0.2, 0.2, 0.2, 0.2],\n      sequences: []\n    }\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"side-flex\">\n          {this.props.mainData.map((p, key) => {\n            return (\n              <div key={key}>\n                <p>Anim {key + 1}</p>\n                {Object.keys(p).map((k, i) => {\n                  if (k === \"sequences\") {\n                    return (\n                      <Sequence\n                        mainData={p[k]}\n                        onAddSeq={d => {\n                          let t = JSON.parse(\n                            JSON.stringify(this.props.mainData)\n                          );\n                          t[key][k].push(d);\n                          this.props.onChange(t);\n                        }}\n                        onChange={d => {\n                          let t = JSON.parse(\n                            JSON.stringify(this.props.mainData)\n                          );\n                          t[key][k] = d;\n                          this.props.onChange(t);\n                        }}\n                      />\n                    );\n                  } else {\n                    return (\n                      <div key={i}>\n                        <input\n                          placeholder={k}\n                          value={k === \"secPerFrame\" ? p[k].join() : p[k]}\n                          name={p[k]}\n                          onChange={e => {\n                            let t = JSON.parse(\n                              JSON.stringify(this.props.mainData)\n                            );\n\n                            if (k === \"secPerFrame\") {\n                              let d = e.target.value;\n                              d = d.split(\",\").map((v, i) => {\n                                console.log(v);\n                                // return parseInt(v);\n                                return v;\n                              });\n                              t[key][k] = d;\n                            } else {\n                              t[key][k] = e.target.value;\n                            }\n                            this.props.onChange(t);\n                          }}\n                        />\n                      </div>\n                    );\n                  }\n                })}\n              </div>\n            );\n          })}\n        </div>\n        <button\n          onClick={() => {\n            let d = JSON.parse(JSON.stringify(this.state.default));\n            d[\"id\"] = this.props.mainData.length + 1;\n            this.props.onAddAnim(d);\n          }}\n        >\n          Add Animation\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Anim;\n","import React, { Component } from \"react\";\nimport Anim from \"./Anim\";\n\nclass GameObjects extends Component {\n  state = {\n    default: {\n      id: 0,\n      posX: 25,\n      posY: -65,\n      scaleX: 40,\n      scaleY: 40,\n      imageName: \"A02-1\",\n      orderInLayer: 1,\n      inText: true,\n      label: \"wag\",\n      destroyOnCollision: \"NIL\",\n      draggable: false,\n      anim: []\n    }\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"side-flex\">\n          {this.props.mainData.map((p, key) => {\n            console.log(key);\n            return (\n              <div key={key}>\n                <p>Game Object {key + 1}</p>\n                {Object.keys(p).map((k, i) => {\n                  if (k === \"anim\") {\n                    return (\n                      <Anim\n                        key={i}\n                        mainData={p[k]}\n                        onAddAnim={d => {\n                          let t = JSON.parse(\n                            JSON.stringify(this.props.mainData)\n                          );\n                          t[key][k].push(d);\n                          this.props.onChange(t);\n                        }}\n                        onChange = {d => {\n                          let t = JSON.parse(JSON.stringify(this.props.mainData));\n                          t[key][k] = d;\n                          this.props.onChange(t);\n                        }}\n                      />\n                    );\n                  } else {\n                    return (\n                      <div key={i}>\n                        <input\n                          placeholder={k}\n                          value={p[k]}\n                          name={p[k]}\n                          onChange={e => {\n                            let t = JSON.parse(\n                              JSON.stringify(this.props.mainData)\n                            );\n                            t[key][k] = e.target.value;\n                            this.props.onChange(t);\n                          }}\n                        />\n                      </div>\n                    );\n                  }\n                })}\n              </div>\n            );\n          })}\n        </div>\n        <button\n          onClick={() => {\n            let d = Object.assign({}, this.state.default);\n            d[\"id\"] = this.props.mainData.length + 1;\n            this.props.onAddGameObject(d);\n          }}\n        >\n          Add Game Object\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default GameObjects;\n","import React, { Component } from \"react\";\n\nclass Text extends Component {\n  state = {\n    default: {\n      id: \"\",\n      text: \"\"\n    }\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"side-flex\">\n          {this.props.mainData.map((p, key) => {\n            return (\n              <div key={key}>\n                <p>Text {key + 1}</p>\n                {Object.keys(p).map((k, i) => {\n                  return (\n                    <div key={i}>\n                      <input\n                        placeholder={k}\n                        value={p[k]}\n                        name={p[k]}\n                        onChange={e => {\n                          let t = JSON.parse(\n                            JSON.stringify(this.props.mainData)\n                          );\n                          t[key][k] = e.target.value;\n                          this.props.onChange(t);\n                        }}\n                      />\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n        <br />\n        <button\n          onClick={() => {\n            let d = Object.assign({}, this.state.default);\n            d[\"id\"] = this.props.mainData.length + 1;\n            this.props.onAddText(d);\n          }}\n        >\n          Add Text\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Text;\n","import React, { Component } from \"react\";\n\nclass Timestamps extends Component {\n  state = {\n    default: {\n      start: \"\",\n      wordIdx: \"\",\n      audio: \"\",\n      end: \"\",\n      starWord: \"\"\n    }\n  };\n  render() {\n    return (\n      <div>\n      <div className=\"side-flex\">\n        {this.props.mainData.map((p, key) => {\n          return (\n            <div key={key}>\n              <p>Timestamp {key + 1}</p>\n              {Object.keys(p).map((k, i) => {\n                return (\n                  <div key={i}>\n                    <input\n                      placeholder={k}\n                      value={p[k]}\n                      name={p[k]}\n                      onChange={e => {\n                        let t = JSON.parse(JSON.stringify(this.props.mainData))\n                        t[key][k] = e.target.value\n                        this.props.onChange(t)\n                      }}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          );\n        })}\n        </div>\n        <br/>\n        <button\n          onClick={() => {\n            let d = Object.assign({}, this.state.default);\n            d[\"id\"] = this.props.mainData.length + 1;\n            this.props.onAddTimestamp(d);\n          }}\n        >\n          Add Timestamps\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Timestamps;\n","import React, { Component } from \"react\";\n\nclass Trigger extends Component {\n  state = {\n    default: {\n      stnzaId: \"\",\n      textId: \"\",\n      timestamp: null,\n      sceneObjectId: \"\",\n      animId: \"\",\n      typeOfLinking: \"\"\n    }\n  };\n  render() {\n    return (\n      <div>\n      <div className=\"side-flex\">\n        {this.props.mainData.map((p, key) => {\n          return (\n            <div key={key}>\n              <p>Trigger {key + 1}</p>\n              {Object.keys(p).map((k, i) => {\n                return (\n                  <div key={i}>\n                    <input\n                      placeholder={k}\n                      value={p[k]}\n                      name={p[k]}\n                      onChange={e => {\n                          let t = JSON.parse(JSON.stringify(this.props.mainData))\n                          t[key][k] = e.target.value\n                          this.props.onChange(t)\n                      }}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          );\n        })}\n        </div>\n        <br/>\n        <button\n          onClick={() => {\n            let d = Object.assign({}, this.state.default);\n            d[\"id\"] = this.props.mainData.length + 1;\n            this.props.onAddTrigger(d);\n          }}\n        >\n          Add Trigger\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Trigger;\n","import React, { Component } from \"react\";\nimport GameObjects from \"./GameObjects\";\nimport Text from \"./Text\";\nimport Timestamps from \"./Timestamps\";\nimport Trigger from \"./Trigger\";\n\nclass Page extends Component {\n  state = {\n    default: {\n      pageNumber: \"\",\n      script: \"\",\n      audio: {\n        audioName: \"\",\n        isAnim: \"\",\n        objectId: \"\"\n      },\n      gameObjects: [],\n      texts: [],\n      audioFile: \"\",\n      timestamps: [],\n      triggers: []\n    }\n  };\n  render() {\n    return (\n      <div>\n        {this.props.mainData.map((p, pageId) => {\n          return (\n            <div key={pageId}>\n              <p>Page {pageId + 1}</p>\n              {Object.keys(p).map((k, i) => {\n                if (k === \"texts\") {\n                  return (\n                    <Text\n                      key={i}\n                      mainData={p[k]}\n                      pageId={pageId}\n                      onAddText={d => {\n                        let t = JSON.parse(JSON.stringify(this.props.mainData));\n                        t[pageId][k].push(d);\n                        this.props.onUpdate(t);\n                      }}\n                      onChange = {d => {\n                        let t = JSON.parse(JSON.stringify(this.props.mainData));\n                        t[pageId][k] = d;\n                        this.props.onUpdate(t);\n                      }}\n                    />\n                  );\n                } else if (k === \"gameObjects\") {\n                  return (\n                    <GameObjects\n                      key={i}\n                      mainData={p[k]}\n                      pageId={pageId}\n                      onAddGameObject={d => {\n                        let t = JSON.parse(JSON.stringify(this.props.mainData));\n                        t[pageId][k].push(d);\n                        this.props.onUpdate(t);\n                      }}\n\n                      onChange = {d => {\n                        let t = JSON.parse(JSON.stringify(this.props.mainData));\n                        t[pageId][k] = d;\n                        this.props.onUpdate(t);\n                      }}\n                    />\n                  );\n                } else if (k === \"timestamps\") {\n                  return (\n                    <Timestamps\n                      key={i}\n                      mainData={p[k]}\n                      pageId={pageId}\n                      onAddTimestamp={d => {\n                        let t = JSON.parse(JSON.stringify(this.props.mainData));\n                        t[pageId][k].push(d);\n                        this.props.onUpdate(t);\n                      }}\n                      onChange = {d => {\n                        let t = JSON.parse(JSON.stringify(this.props.mainData));\n                        t[pageId][k] = d;\n                        this.props.onUpdate(t);\n                      }}\n                    />\n                  );\n                } else if (k === \"triggers\") {\n                  return (\n                    <Trigger\n                      key={i}\n                      mainData={p[k]}\n                      pageId={pageId}\n                      onAddTrigger={d => {\n                        let t = JSON.parse(JSON.stringify(this.props.mainData));\n                        t[pageId][k].push(d);\n                        this.props.onUpdate(t);\n                      }}\n\n                      onChange = {d => {\n                        let t = JSON.parse(JSON.stringify(this.props.mainData));\n                        t[pageId][k] = d;\n                        this.props.onUpdate(t);\n                      }}\n                    />\n                  );\n                } else if (k === \"audio\") {\n                  return (\n                    <div key={i}>\n                      <p>{k}</p>\n                      {Object.keys(p[k]).map((key, i) => {\n                        return (\n                          <div key={i}>\n                            <input\n                              placeholder={key}\n                              value={p[k][key]}\n                              name={p[k][key]}\n                              onChange={e => {\n                                let t = JSON.parse(\n                                  JSON.stringify(this.props.mainData)\n                                );\n                                t[pageId][k][key] = e.target.value;\n                                this.props.onUpdate(t);\n                              }}\n                            />\n                          </div>\n                        );\n                      })}\n                    </div>\n                  );\n                } else {\n                  return (\n                    <div key={i}>\n                      <input\n                        placeholder={k}\n                        value={p[k]}\n                        name={p[k]}\n                        onChange={e => {\n                          let t = Object.assign([], this.props.mainData);\n                          t[pageId][k] = e.target.value;\n                          this.props.onUpdate(t);\n                        }}\n                      />\n                    </div>\n                  );\n                }\n              })}\n              <hr />\n            </div>\n          );\n        })}\n\n        <button\n          onClick={() => {\n            let d = JSON.parse(JSON.stringify(this.state.default));\n            d[\"pageNumber\"] = this.props.mainData.length + 1;\n            this.setState({ pa: this.state.pa + 1 });\n            this.props.onAddPage(d);\n          }}\n        >\n          Add Page\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Page;\n","import React, { Component } from \"react\";\nimport Page from './Page';\n\n\nclass Format extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        {Object.keys(this.props.mainData).map((k, i) => {\n          if (Array.isArray(this.props.mainData[k])) {\n            return (\n              <div key={i}>\n                <Page\n                  mainData={this.props.mainData.pages}\n                  onAddPage={(d) => this.props.onAddPage(d)}\n                  onUpdate={t => this.props.onUpdate(t)}\n                />\n              </div>\n            );\n          } else {\n            return (\n              <div key={i}>\n                <input\n                  placeholder={k}\n                  value={this.props.mainData[k]}\n                  name={k}\n                  onChange={e => this.props.dataChange(e)}\n                />\n              </div>\n            );\n          }\n        })}\n\n        {/* <p>{JSON.stringify(this.props.mainData)}</p> */}\n      </div>\n    );\n  }\n}\n\nexport default Format;\n","import Playground from './Playground';\n\nexport default Playground;","import React, { Component } from \"react\";\nimport { Format } from \"../components/\";\nimport Download from \"downloadjs\";\nimport _ from \"lodash\";\n\nclass Playground extends Component {\n  state = {\n    mainData: {\n      id: \"\",\n      fontColor: \"\",\n      textStartPositionX: \"\",\n      textStartPositionY: \"\",\n      textFontSize: \"\",\n      storyImageFile: \"\",\n      backgroundColor: \"\",\n      arrowColor: \"\",\n      fontFamily: \"\",\n      language: \"\",\n      pages: []\n    }\n  };\n\n  replacePropertyValue(object) {\n    const newObject = _.clone(object);\n\n    _.each(object, (val, key) => {\n      if (Array.isArray(val) && val.length == 0) {\n        newObject[key] = null;\n      } else if (typeof val === \"object\" || Array.isArray(val)) {\n        newObject[key] = this.replacePropertyValue(val);\n      }\n    });\n\n    return newObject;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Format\n          mainData={this.state.mainData}\n          dataChange={e => {\n            this.setState({\n              mainData: {\n                ...this.state.mainData,\n                [e.target.name]: e.target.value\n              }\n            });\n          }}\n          onUpdate={t => {\n            this.setState({ mainData: { ...this.state.mainData, pages: t } });\n          }}\n          onAddPage={d => {\n            let p = [...this.state.mainData.pages];\n\n            p.push(d);\n            let mainData = Object.assign({}, this.state.mainData);\n            mainData[\"pages\"] = p;\n\n            this.setState({\n              mainData\n            });\n          }}\n        />\n\n        <button\n          onClick={e => {\n            let d = JSON.stringify(\n              this.replacePropertyValue(this.state.mainData)\n            );\n\n            Download(d, \"data.json\", \"text/json\");\n          }}\n        >\n          Download JSON\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Playground;\n","import React, { Component } from \"react\";\n\nimport Playground from \"./containers\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Playground />\n\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}